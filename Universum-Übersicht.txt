-----------------------------------------------------------------------------------------------
---- FIS-55645: Performance-Optimierung v.a. über die Parallel-Hints (Ausnahmeinsatz,
---- da der Bericht sehr zeitkritisch ist und enorm viele Daten abruft bzw.
---- verarbeiten muss.)
-----------------------------------------------------------------------------------------------

-- Abstimmung CBCRLLP vs CBCRLLP_X_SRV_LTD für Inland und Ausland -------------------------
-- Angepasste ASB Impairment Stand 2019-09-13
-- Sofern LLP_FALL_BACK_F = 'T' kann keine Abstimmung durchgeführt werden------

-----------------------------------------------------------------------------------------------
---- cbglxc -- Alle Datensätze aus der CBGLBAS_X_CATEGORY -----------------------------------
-----------------------------------------------------------------------------------------------
WITH cbglxc AS (
    SELECT A.CLIENT, A.ref_d, A.delisyst, A.category_ifrs_ind, A.contract, A.category_hgb_ind
    FROM cdbegb.v_egb_cbglbas_x_category_ke A  
    WHERE 1=1
        AND A.ref_d = to_date(@Prompt(REF_D_AKT))
        AND A.delisyst IN @Prompt(DELISYST)
),

------------------------------------------------------------
-- Referenztabelle zur ERmittlung der Fresco_ID
-------------------------------------------------------------
part AS (
    SELECT DISTINCT partition_no
    FROM v_mt_table_status
    WHERE 1=1
        AND table_id = '8951'
        AND active = 'A'
        AND status = 'C'
),

rdod AS (
    SELECT  company_code_ind AS rdod_company_code_ind, fresco_entity_id
    FROM cdbegb.v_egb_rdod_company_code_k
    WHERE 1=1
        AND partition_no IN ( SELECT * FROM part )
        AND ref_d IN ( SELECT MAX(ref_d) FROM cdbegb.v_egb_rdod_company_code_k)
),

-----------------------------------------------------------------------------------------------
---- cbgl --- Alle Datensätze aus der CBGLBAS -----------------------------------------------
-----------------------------------------------------------------------------------------------
cbgl AS (
    SELECT CLIENT, ref_d, delisyst, contract, cdb_struct, product_type_cdb , product_type_2_orig_ind , company_code_ind, fresco_entity_id AS frescoid
    FROM cdbegb.v_egb_cbglbas_ke
    LEFT OUTER JOIN rdod  ON (company_code_ind = rdod_company_code_ind)
    WHERE 1=1
        AND ref_d = to_date(@Prompt(REF_D_AKT))
        AND delisyst IN @Prompt(DELISYST)
        AND company_code_ind IN @Prompt(company_code_ind)
        AND fresco_entity_id IN @Prompt(FrescoID) 
),

-----------------------------------------------------------------------------------------------
----cbgl_cbglxc --- Inner Join der CBGLBAS mit CBGLBAS_X_CATEGORY-----------------------------
-----------------------------------------------------------------------------------------------
 cbgl_cbglxc AS (
    SELECT cbgl.ref_d AS ref_d,
        cbgl.delisyst AS delisyst,
        cbgl.contract AS contract,
        cbgl.cdb_struct AS cdb_struct,
        cbgl.product_type_cdb AS product_type_cdb,
        cbgl.product_type_2_orig_ind AS product_type_2_orig_ind,
        cbglxc.category_ifrs_ind AS category_ifrs_ind,
        cbglxc.category_hgb_ind AS category_hgb_ind,
        cbgl.frescoid AS frescoid
    FROM cbgl
    INNER JOIN cbglxc
        ON         cbgl.ref_d = cbglxc.ref_d
            AND cbgl.contract = cbglxc.contract
            AND cbgl.delisyst = cbglxc.delisyst
),

-----------------------------------------------------------------------------------------------
----CBR -- INNER Join der CBCRLLP mit CBGLBAS_CBGLBAS_X_CATEGORY ------------------------------
-----------------------------------------------------------------------------------------------
cbr AS (
    SELECT /*+ PARALLEL 4 */ cb.CLIENT,
        cb.contract,
        cb.delisyst,
        cb.currency_c,
        cb.ledger_ind,
        cb.company_code_ind,
        cb.balance_type_ind,
        cb.llp_fall_back_f,
        cb.poci_f,
        cb.stage_ind,
        cb.depr_f,
        cb.full_depr_posting_f,
        cb.el_lt_ta,
        cb.el_1y_ta,
        cb.el_initial_lt_ta,
        cbgl_cbglxc.frescoid
    FROM cdbegb.v_egb_cbcrllp_ae cb
    INNER JOIN cbgl_cbglxc
    ON      cb.contract = cbgl_cbglxc.contract
        AND cb.delisyst = cbgl_cbglxc.delisyst
        --AND cb.ref_d    = cbgl_cbglxc.ref_d
    WHERE 1=1
        AND cb.ref_d = to_date(@Prompt(REF_D_ULTIMO))
        AND cb.delisyst IN @Prompt(DELISYST)
        AND cb.last_partition = 'T'
        AND cb.table_id_vp <> '15118' -- Req3650 entfernt fehlerhafte U4 Beladung
        AND cb.table_id_rohdaten <> '15117' -- Req3650 entfernt fehlerhafte U4 Beladung
        AND cb.date_type = @Prompt(DATE_TYPE_ULTIMO)
        AND cb.company_code_ind IN @Prompt(company_code_ind)
-----------------------------------------------------------------------------------------------
------- Filter für Vorfahrt RELEVANT_F = T
-----------------------------------------------------------------------------------------------
        AND (
            (
            (cbgl_cbglxc.product_type_cdb IN (SELECT DISTINCT product_type_cdb FROM cdbegb.v_egb_rdgl_llp_prdct_filter_k WHERE relevant_f = 'T' AND ledger_ind = 'IFRS') AND cb.ledger_ind = 'IFRS')
            OR
            (cbgl_cbglxc.product_type_cdb IN (SELECT DISTINCT product_type_cdb FROM cdbegb.v_egb_rdgl_llp_prdct_filter_k WHERE relevant_f = 'T' AND ledger_ind = 'HGB') AND cb.ledger_ind = 'HGB')
            )
-----------------------------------------------------------------------------------------------
------ FILTER für RELEVANT_F = NULL-----------------------------------------------------------
-----------------------------------------------------------------------------------------------
          OR (
            (-- Filter für HGB und RELEVANT_F = NULL--------------------------------------------------
             cb.ledger_ind = 'HGB'
             AND cbgl_cbglxc.product_type_cdb NOT IN (SELECT DISTINCT product_type_cdb FROM cdbegb.v_egb_rdgl_llp_prdct_filter_k WHERE  ledger_ind = 'HGB')
             AND cbgl_cbglxc.category_hgb_ind <> 'HB'
             AND cbgl_cbglxc.cdb_struct NOT IN ('VS_FXDERIV','VS_OTCOPT')
             AND (cbgl_cbglxc.cdb_struct NOT IN ('VS_POSACC') OR  cbgl_cbglxc.product_type_2_orig_ind = '9604')
             )
            OR
             (-- Filter für IFRS und RELEVANT_F = NULL -- inkl. FVP und FVO-------------------------
              cb.ledger_ind = 'IFRS'
              AND cbgl_cbglxc.product_type_cdb NOT IN (SELECT DISTINCT product_type_cdb FROM cdbegb.v_egb_rdgl_llp_prdct_filter_k WHERE  ledger_ind = 'IFRS')
              AND cbgl_cbglxc.category_ifrs_ind NOT IN ( 'FVN','FVP','FVO')
             )
            )
        )
),

-----------------------------------------------------------------------------------------------
---------CBX -- Alle Datensäzte aus der CBCRLLP_X_SRV_LTD ------------------------------------
-----------------------------------------------------------------------------------------------
cbx AS (
    SELECT *
    FROM cdbegb.v_egb_cbcrllp_x_srv_ltd_ae
    WHERE ref_d = to_date(@Prompt(REF_D_ULTIMO))
        AND delisyst IN @Prompt(DELISYST)
        AND last_partition = 'T'  
        AND table_id_vp <> '15122' -- Req3650 entfernt fehlerhafte U4 Beladung
        AND table_id_rohdaten <> '15121' -- Req3650 entfernt fehlerhafte U4 Beladung
        AND date_type = @Prompt(DATE_TYPE_ULTIMO)       
),

-----------------------------------------------------------------------------------------------
-----ERGEBNIS1 --- Join der CBR mit CBX und Differenzenrechnung ------------------------------
-- Req3650 in Summen alle "- other_adj_..." zu "+ other_adj_..." auf Anfrage CTSF KG--
-----------------------------------------------------------------------------------------------
ergebnis1 AS (
    SELECT /*+ PARALLEL 4 materialize */
        cbr.CLIENT AS CLIENT,
        cbr.delisyst AS delisyst,
        cbr.frescoid,
        cbr.balance_type_ind AS balance_type_ind,
        cbr.contract AS cbcrllp_contract,
        cbx.contract AS cbcrllp_x_srv_contract,
        cbr.currency_c AS currency_c,
        cbr.ledger_ind AS ledger_ind,
        cbr.company_code_ind AS company_code_ind,
        cbr.llp_fall_back_f AS llp_fall_back_f,
        cbr.poci_f AS poci_f,
        cbr.stage_ind AS stage_ind,
        cbr.depr_f AS depr_f,
        cbr.full_depr_posting_f AS full_depr_f,
       
----------------------------------------------------------------------------------------------      
-------AS_STAGE1 SUMME-- Abstimmung Stage1 und nicht POCI ------------------------------------
-----------------------------------------------------------------------------------------------
        CASE WHEN (
                        cbr.stage_ind = '1'
                    AND cbr.poci_f = 'F'
                )
            THEN ( cbr.el_1y_ta - ABS(el_carry_forw_1_ta + el_first_add_1_ta + el_addition_model_1_ta + el_release_model_1_ta + el_addition_2_1_ta + el_addition_3_1_ta
 + el_release_1_2_ta + el_release_1_3_ta + el_first_rel_1_ta + el_derecog_1_ta + other_adj_1_ta) )
            ELSE 0
            END AS as_sum_stage1,
           
----------------------------------------------------------------------------------------------      
-------AS_STAGE2-- Abstimmung Stage2 und nicht POCI ------------------------------------------
-----------------------------------------------------------------------------------------------
        CASE WHEN (
                    (
                            cbr.stage_ind = '2'
                        AND cbr.poci_f = 'F'
                    ) AND cbr.ledger_ind = 'HGB'
                )
            THEN ( cbr.el_lt_ta - ABS(el_carry_forw_2_ta + el_first_add_2_ta + el_addition_model_2_ta + el_release_model_2_ta + el_addition_1_2_ta + el_addition_3_2_ta
 + el_release_2_1_ta + el_release_2_3_ta + el_first_rel_2_ta + el_derecog_2_ta + unw_2_ta + other_adj_2_ta) )
            WHEN (
                    (
                            cbr.stage_ind = '2'
                        AND cbr.poci_f = 'F'
                    ) AND cbr.ledger_ind = 'IFRS'
                )
            THEN ( cbr.el_lt_ta - ABS(el_carry_forw_2_ta + el_first_add_2_ta + el_addition_model_2_ta + el_release_model_2_ta + el_addition_1_2_ta + el_addition_3_2_ta
 + el_release_2_1_ta + el_release_2_3_ta + el_first_rel_2_ta + el_derecog_2_ta + unw_2_ta + other_adj_2_ta) )
            ELSE 0
            END AS as_sum_stage2,
           
-----------------------------------------------------------------------------------------------
-------AS_STAGE3-- Abstimmung Stage3 und nicht POCI ------------------------------------------
-----------------------------------------------------------------------------------------------
        CASE WHEN (
                        cbr.stage_ind = '3'
                    AND cbr.poci_f = 'F'
                    AND cbr.depr_f = 'F' -- bei Abschreibung nie berechnen (Df 5598)
                )
            THEN ( cbr.el_lt_ta - ABS(el_carry_forw_3_ta + el_first_add_3_ta + el_addition_model_3_ta + el_release_model_3_ta + el_addition_2_3_ta + el_addition_1_3_ta
 + el_release_3_2_ta + el_release_3_1_ta + el_first_rel_3_ta + el_derecog_3_ta + unw_3_ta + other_adj_3_ta) )
            ELSE 0
            END AS as_sum_stage3,
           
-----------------------------------------------------------------------------------------------
-------AS_POCI-- Abstimmung POCI -------------------------------------------------------------
-----------------------------------------------------------------------------------------------
        CASE WHEN (
                    (
                            cbr.poci_f = 'T'
                        AND cbr.ledger_ind = 'IFRS'
                        AND cbr.stage_ind = '2'    
                    ) OR (
                            cbr.poci_f = 'T'
                        AND cbr.stage_ind = '3'
                        AND
                            cbr.depr_f = 'F'  -- bei Abschreibung nie berechnen (Df 5598)
                    )
                )
            THEN
                     ( cbr.el_lt_ta - ABS(d2_carry_forw_ta + d2_addition_ta + d2_release_ta + d2_usage_ta + el_carry_forw_poci_ta + el_first_add_poci_ta + el_first_rel_poci_ta
 + el_addition_poci_ta + el_release_poci_ta + el_derecog_poci_ta + unw_poci_ta  + other_adj_poci_ta) )-- Frage Carry Forward:1:2
            WHEN (
                        cbr.poci_f = 'T'
                    AND cbr.ledger_ind = 'HGB'
                    AND cbr.stage_ind = '2'  
                )
            THEN ( cbr.el_lt_ta - ABS(d2_carry_forw_ta + d2_addition_ta + d2_release_ta + d2_usage_ta + el_carry_forw_poci_ta + el_first_add_poci_ta + el_first_rel_poci_ta
 + el_addition_poci_ta + el_release_poci_ta + el_derecog_poci_ta + unw_poci_ta + other_adj_poci_ta) )-- Frage Carry Forward:3:4

            ELSE 0
            END AS as_sum_poci,
           
-----------------------------------------------------------------------------------------------
-------AS_D2-- Abstimmung D2 -----------------------------------------------------------------
-----------------------------------------------------------------------------------------------
            CASE WHEN (
                        cbr.poci_f = 'T'
                    AND cbr.ledger_ind = 'IFRS'
                       AND cbr.depr_f = 'F'  -- 06.03.2018
                )
            THEN ( cbr.el_initial_lt_ta - ABS(d2_carry_forw_ta + d2_addition_ta + d2_release_ta + d2_usage_ta) )
            ELSE
                   CASE  WHEN (cbr.poci_f = 'T' AND cbr.ledger_ind = 'IFRS'AND cbr.depr_f = 'F')  -- 06.03.2018
                   THEN (  -1* ABS(d2_carry_forw_ta + d2_addition_ta + d2_release_ta + d2_usage_ta) )-- 06.03.2018
                   ELSE 0 -- 06.03.2018
                   END-- 06.03.2018          
            END AS as_sum_d2,
-----------------------------------------------------------------------------------------------
-------AS_1Y-- Abstimmung 1Y und nicht POCI --------------------------------------------------
-----------------------------------------------------------------------------------------------

            CASE WHEN (
                        cbr.poci_f = 'F'
                    AND (
                            cbr.stage_ind = '1'
                    )
                )
            THEN ( cbr.el_1y_ta - cbx.el_1y_ta )
            ELSE 0
            END AS as_1y,
           
-----------------------------------------------------------------------------------------------
-------AS_LT-- Abstimmung LT und nicht POCI --------------------------------------------------
-----------------------------------------------------------------------------------------------
            CASE WHEN (
                        cbr.poci_f = 'F'
                    AND (
                            (   cbr.stage_ind = '3'
                            AND
                                cbr.depr_f = 'F'     -- bei Abschreibung = 0 (Df 5598)
                            )
                        OR (
                                cbr.stage_ind = '2'    
                        )
                    )
                )
            THEN ( cbr.el_lt_ta - cbx.el_lt_ta )
            ELSE 0
            END AS as_lt,
           
-----------------------------------------------------------------------------------------------
-------AS_LTD_1-- Abstimmung Stage1 und nicht POCI -------------------------------------------
-----------------------------------------------------------------------------------------------
            CASE WHEN (
                        cbr.poci_f = 'F'
                    AND cbr.stage_ind = '1'
                )
            THEN ( cbr.el_1y_ta - cbx.el_ltd_1_ta )
            ELSE 0
            END AS as_ltd_1,
           
-----------------------------------------------------------------------------------------------
------AS_LTD_2-- Abstimmung Stage3 und nicht POCI --------------------------------------------
-----------------------------------------------------------------------------------------------
            CASE WHEN (
                        cbr.poci_f = 'F'
                    AND cbr.stage_ind = '2'
                    AND cbr.ledger_ind = 'HGB'
                )
            THEN ( cbr.el_lt_ta - cbx.el_ltd_2_ta )
            WHEN (
                        cbr.poci_f = 'F'
                    AND cbr.stage_ind = '2'
                    AND cbr.ledger_ind = 'IFRS'
                )
            THEN ( cbr.el_lt_ta - cbx.el_ltd_2_ta )
            ELSE 0
            END AS as_ltd_2,
           
-----------------------------------------------------------------------------------------------
-------AS_LTD_3-- Abstimmung Stage3 und nicht POCI -------------------------------------------
-----------------------------------------------------------------------------------------------
            CASE WHEN (
                        cbr.poci_f = 'F'
                    AND cbr.stage_ind = '3'
                    AND
                        cbr.depr_f = 'F'     -- bei Abschreibung = 0
                )
            THEN ( cbr.el_lt_ta - cbx.el_ltd_3_ta )
            ELSE 0
            END AS as_ltd_3,
           
-----------------------------------------------------------------------------------------------
-------AS_LTD_POCI-- Abstimmung POCI ---------------------------------------------------------
-----------------------------------------------------------------------------------------------
            CASE WHEN (
                        cbr.poci_f = 'T'
                    AND cbr.ledger_ind = 'IFRS'
                    AND cbr.depr_f = 'F'     -- bei Abschreibung = 0
                )
            THEN ( ( cbr.el_lt_ta - cbr.el_initial_lt_ta ) - cbx.el_ltd_poci_ta ) -- angepasst 13.04.

            ELSE 0
            END AS as_ltd_poci,
           
-----------------------------------------------------------------------------------------------
-------AS_LTD_D2-- Abstimmung POCI -------------------------------------------
-----------------------------------------------------------------------------------------------
            CASE WHEN (
                        cbr.poci_f = 'T'
                    AND cbr.ledger_ind = 'IFRS'
                        AND cbr.depr_f = 'F' --- 06.03.2018
                )
            THEN ( cbr.el_initial_lt_ta - cbx.d2_ltd_ta )
           
            ELSE
               CASE WHEN  (cbr.poci_f = 'T' AND cbr.ledger_ind = 'IFRS' AND cbr.depr_f = 'F')  -- 06.03.2018
               THEN (  -1* ABS(d2_carry_forw_ta + d2_addition_ta + d2_release_ta + d2_usage_ta) )-- 06.03.2018
               ELSE -- 06.03.2018
               0
               END
            END AS as_ltd_d2
       
       
    FROM cbr
    FULL OUTER JOIN cbx
    ON (
            cbr.contract = cbx.contract
        AND cbr.delisyst = cbx.delisyst
        AND cbr.ledger_ind = cbx.ledger_ind
        AND cbr.currency_c = cbx.currency_c
    )
),
-----------------------------------------------------------------------------------------------
-----ERGEBNIS2 --- Erfolgskennzeichen RC_SUCCESSFUL_x ----------------------------------------
-----------------------------------------------------------------------------------------------
ergebnis2 AS (
    SELECT /*+ PARALLEL 4 materialize */
        CLIENT,
        delisyst,
		frescoid,
        balance_type_ind,
        cbcrllp_contract,
        currency_c,
        ledger_ind,
        company_code_ind,
        llp_fall_back_f,
        poci_f,
        stage_ind,
        depr_f,
        full_depr_f,
        as_sum_stage1,
        as_sum_stage2,
        as_sum_stage3,
        as_sum_poci,
        as_sum_d2,
        as_1y,
        as_lt,
        as_ltd_1,
        as_ltd_2,
        as_ltd_3,
        as_ltd_poci,
        as_ltd_d2,
       
        CASE WHEN as_sum_stage1 = 0
            THEN 'T'
            WHEN ABS(as_sum_stage1) < 1
            THEN 'K'
            ELSE 'D'
            END AS rc_successful_sum_1_f,
           
        CASE WHEN as_sum_stage2 = 0
            THEN 'T'
            WHEN ABS(as_sum_stage2) < 1
            THEN 'K'
            ELSE 'D'
            END AS rc_successful_sum_2_f,
           
        CASE WHEN as_sum_stage3 = 0
            THEN
                CASE WHEN          
                    (   stage_ind = '3'
                    AND poci_f = 'F'          
                    AND        
                       depr_f = 'T'
                    )
                THEN              
                    'DEPR'
                ELSE                
                    'T'        
                END                
            WHEN ABS(as_sum_stage3) < 1
           THEN 'K'
            ELSE 'D'
            END AS rc_successful_sum_3_f,
           
        CASE WHEN as_sum_poci = 0
            THEN
                  CASE WHEN          
                 (      poci_f = 'T'          
                    AND depr_f = 'T'
                    )
                THEN                
                  'DEPR'
                ELSE              
                    'T'        
                END              
            WHEN ABS(as_sum_poci) < 1
            THEN 'K'
            ELSE 'D'
            END AS rc_successful_sum_poci_f,
           
        CASE WHEN as_sum_d2 = 0
                AND depr_f = 'F'-- 06.03.2018
            THEN 'T'
                WHEN -- 06.03.2018
                as_sum_d2 = 0-- 06.03.2018
                AND depr_f = 'T'-- 06.03.2018
                THEN 'DEPR'-- 06.03.2018
            WHEN ABS(as_sum_d2) < 1
            THEN 'K'
            ELSE 'D'
            END AS rc_successful_sum_d2_f,
           
        CASE WHEN as_1y = 0
            THEN 'T'
            WHEN ABS(as_1y) < 1
            THEN 'K'
            ELSE 'D'
            END AS rc_successful_1y_f,
           
        CASE WHEN as_lt = 0
            THEN
                 CASE WHEN          
                    (   poci_f = 'F'
                    AND stage_ind = '3'        
                    AND depr_f = 'T'        
                    )
                THEN                
                    'DEPR'            
                ELSE              
                    'T'        
                END              
            WHEN ABS(as_lt) < 1
            THEN 'K'
            ELSE 'D'
            END AS rc_successful_lt_f,
           
        CASE WHEN as_ltd_1 = 0
            THEN 'T'
            WHEN ABS(as_ltd_1) < 1
            THEN 'K'
            ELSE 'D'
            END AS rc_successful_ltd_1_f,
           
        CASE WHEN as_ltd_2 = 0
            THEN 'T'
            WHEN ABS(as_ltd_2) < 1
            THEN 'K'
            ELSE 'D'
            END AS rc_successful_ltd_2_f,
           
        CASE WHEN as_ltd_3 = 0
            THEN
                CASE WHEN      
                    (   poci_f = 'F'
                    AND    
                        stage_ind = '3'        
                    AND depr_f = 'T'        
                    )
                THEN              
                    'DEPR'          
                ELSE          
                    'T'        
                END                
            WHEN ABS(as_ltd_3) < 1
            THEN 'K'
            ELSE 'D'
            END AS rc_successful_ltd_3_f,
           
        CASE WHEN as_ltd_poci = 0
            THEN
                CASE WHEN        
                    (   poci_f = 'T'
                    AND ledger_ind = 'IFRS'     -- eingefügt MH 25.10.17
                    AND depr_f = 'T'          
                    )
                THEN              
                    'DEPR'          
                ELSE          
                    'T'        
                END                
            WHEN ABS(as_ltd_poci) < 1
            THEN 'K'
            ELSE 'D'
            END AS rc_successful_ltd_poci_f,
           
            CASE WHEN as_ltd_d2 = 0
                    AND depr_f = 'F'---06,03.2018
                THEN 'T'    
                WHEN as_ltd_d2 = 0 ---06,03.2018  
                    AND depr_f = 'T'---06,03.2018  
                THEN 'DEPR'---06.03.2018
                WHEN ABS(as_ltd_d2) < 1
                THEN 'K'
                ELSE 'D'
                END AS rc_successful_ltd_d2_f,
             
            CASE WHEN (
                    as_sum_stage1 = 0
                    AND as_sum_stage2 = 0
                    AND as_sum_stage3 = 0
                    AND as_sum_poci = 0
                    AND as_sum_d2 = 0
                    AND as_1y = 0
                    AND as_lt = 0
                    AND as_ltd_1 = 0
                    AND as_ltd_2 = 0
                    AND as_ltd_3 = 0
                    AND as_ltd_poci = 0
                    AND as_ltd_d2 = 0
                    )
                THEN (
                    CASE WHEN depr_f = 'T' -- DEPR_F = T eingefügt MH 25.10.17
                        THEN 'DEPR'
                        ELSE 'T'                    
                        END )                      
                WHEN (
                        ABS(as_sum_stage1) < 1
                        AND ABS(as_sum_stage2) < 1
                        AND ABS(as_sum_stage3) < 1
                        AND ABS(as_sum_poci) < 1
                        AND ABS(as_sum_d2) < 1
                        AND ABS(as_1y) < 1
                        AND ABS(as_lt) < 1
                        AND ABS(as_ltd_1) < 1
                        AND ABS(as_ltd_2) < 1
                        AND ABS(as_ltd_3) < 1
                        AND ABS(as_ltd_poci) < 1
                        AND ABS(as_ltd_d2) < 1
                    )
                THEN 'K'
                ELSE 'D'
                END AS rc_successful_f
    FROM ergebnis1
    WHERE llp_fall_back_f = 'F'
)

-----------------------------------------------------------------------------------------------
-----Ausgabe aller Datensätze die mindestens eine Differenz ausweisen -------------------------
-----------------------------------------------------------------------------------------------
SELECT /*+ PARALLEL 4 */ 
    delisyst,  
    frescoid,
	rc_successful_f,
	COUNT(cbcrllp_contract) AS Zähler 
	/*						-- FIS-55645: Auskommentiert, da für die Felder für die finale Datenausgabe nicht relevant sind#. Verbessert die Performance deutlich.
	CLIENT,
    balance_type_ind,       
    currency_c,  
    ledger_ind,
    company_code_ind,  
    llp_fall_back_f,
    poci_f,  
    stage_ind,
    depr_f,
    full_depr_f,
    as_sum_stage1,
    as_sum_stage2,
    as_sum_stage3,
    as_sum_poci,
    as_sum_d2,
    as_1y,
    as_lt,
    as_ltd_1,
    as_ltd_2,
    as_ltd_3,
    as_ltd_poci,
    as_ltd_d2,
 
    rc_successful_sum_1_f,
    rc_successful_sum_2_f,
    rc_successful_sum_3_f,
    rc_successful_sum_poci_f,
    rc_successful_sum_d2_f,
    rc_successful_1y_f,
    rc_successful_lt_f,
    rc_successful_ltd_1_f,
    rc_successful_ltd_2_f,
    rc_successful_ltd_3_f,
    rc_successful_ltd_poci_f,
    rc_successful_ltd_d2_f */
FROM ergebnis2
WHERE rc_successful_f IN @Prompt(RC_SUCCESFUL_F)
   AND company_code_ind IN  @Prompt(company_code_ind)
   AND frescoid IN @Prompt(FrescoID)
GROUP BY
    DELISYST,
    FRESCOID,
    RC_SUCCESSFUL_F